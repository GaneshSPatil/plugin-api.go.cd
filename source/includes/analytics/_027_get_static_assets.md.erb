## Get Static Assets

For building rich visualizations plugins might need to use multiple static assets like javascript libraries, images, css, HTML etc. GoCD provides an option for plugins to cache these static assets in GoCD. The plugin is free to decide on the type of static assets it wants to use.

On plugin load GoCD sends this message to fetch the static assets. The plugin should zip all the assets and return the zipped assets as a Base64 encoded string. GoCD will unzip and store the contents in a path specific to the plugin. Every time a plugin is loaded GoCD will delete any existing plugin assets before storing the new assets.

<p class='request-name-heading'>Request name</p>

`go.cd.analytics.get-static-assets`

<p class='request-body-heading'>Request body</p>

Server sends request with an empty request body.

<p class='response-code-heading'>Response Body</p>

> Example code snippet for generating the response

```java
    public GoPluginApiResponse execute() throws Exception {
        DefaultGoPluginApiResponse response = new DefaultGoPluginApiResponse(200);
        response.setResponseBody(
                GSON.toJson(Collections.singletonMap("assets", new String(
                        Base64.getEncoder().encode(
                            IOUtils.toByteArray(getClass().getResourceAsStream("assets.zip"))
                        ),
                        StandardCharsets.ISO_8859_1
                )))
        );
        return response;
    }
```
> An example response body â€”

```json
{
  "assets": "static assets which is a Base64 encoded zip file"
}
```

The response body should contain the <code>assets</code> field which is the zipped static assets as a Base64 encoded string.

<p class='attributes-table-follows'></p>

| Key     | Type     | Description                                            |
|---------|----------|--------------------------------------------------------|
| `assets`| `String` | The zipped assets returned as a Base64 encoded string. |

The plugin is expected to return status `200` if it can understand the request.
